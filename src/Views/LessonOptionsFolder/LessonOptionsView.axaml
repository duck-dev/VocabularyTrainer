<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:views="clr-namespace:VocabularyTrainer.Views"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="VocabularyTrainer.Views.LessonOptionsView">

    <Expander ExpandDirection="Down" Padding="0">
        <Expander.Header>
            <TextBlock Foreground="{StaticResource MainGrey}" FontSize="18" Text="More options:"/>
        </Expander.Header>
        <Expander.Content>
            <StackPanel Orientation="Vertical">
                <views:LessonOptionItem Description="Error tolerance" IsInlined="False">
                    <views:LessonOptionItem.TooltipText>
                        How tolerant should the program be in checking your written answer compared to the actual definition?
Choose from 3 pre-defined templates (High, Balanced, Low) or customize your own settings!
                    </views:LessonOptionItem.TooltipText>
                    <views:LessonOptionItem.MainContent>
                        <ListBox Items="{Binding ErrorToleranceTemplates}" SelectionMode="AlwaysSelected,Single"
                                 Background="{StaticResource FullyTransparent}"
                                 SelectedIndex="{Binding SelectedTolerance}"
                                 DataContext="{Binding $parent[UserControl].DataContext}">
                            <ListBox.Styles>
                                <Style Selector="ListBoxItem">
                                    <Setter Property="Padding" Value="0"/>
                                    <Setter Property="Width" Value="160"/>
                                    <Setter Property="Height" Value="40"/>
                                    <Setter Property="CornerRadius" Value="5"/>
                                    <Setter Property="BorderThickness" Value="0"/>
                                    <Setter Property="Margin" Value="0,0,10,0"/>
                                </Style>
                                <Style Selector="ListBoxItem:pointerover">
                                    <Setter Property="Cursor" Value="Hand"/>
                                </Style>
                                <Style Selector="ListBoxItem:pointerover /template/ ContentPresenter">
                                    <Setter Property="Background" Value="{TemplateBinding Background}"/>
                                </Style>
                                <Style Selector="ListBoxItem:selected /template/ ContentPresenter">
                                    <Setter Property="Background" Value="{StaticResource AppBlue}"/>
                                </Style>
                            </ListBox.Styles>
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal"/>
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Item2}" Foreground="{StaticResource OppositeAccent}"
                                               FontSize="20" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </views:LessonOptionItem.MainContent>
                </views:LessonOptionItem>
                <StackPanel Margin="40,0,0,0" IsEnabled="{Binding IndividualSettingsEnabled}" 
                            Opacity="{Binding IndividualSettingsOpacity}">
                    <views:LessonOptionItem Description="Correction steps" IsInlined="True">
                        <views:LessonOptionItem.TooltipText>
                            How many edit operations have to be performed in order to correct your written answer to the actual definition?
The operations are: Insertion, Deletion, Substitution and Transposition.
It is recommended to keep the value below 2.
                        </views:LessonOptionItem.TooltipText>
                        <views:LessonOptionItem.MainContent>
                            <NumericUpDown Increment="1" Minimum="0" Maximum="2147483647" ClipValueToMinMax="True"
                                           AllowSpin="True" ButtonSpinnerLocation="Right" ShowButtonSpinner="True"
                                           HorizontalContentAlignment="Center" VerticalContentAlignment="Center" ParsingNumberStyle="Integer"
                                           Width="140" Height="20" Value="{Binding CurrentOptions.CorrectionSteps, Mode=TwoWay}"
                                           DataContext="{Binding $parent[UserControl].DataContext}"/>
                        </views:LessonOptionItem.MainContent>
                    </views:LessonOptionItem>
                    <views:LessonOptionItem Description="Tolerate swapped letters" IsInlined="True">
                        <views:LessonOptionItem.TooltipText>
                            Tolerate swapped letters (for example: "letter" - "lettre" isn't counted as a mistake)?
                        </views:LessonOptionItem.TooltipText>
                        <views:LessonOptionItem.MainContent>
                            <CheckBox IsChecked="{Binding CurrentOptions.TolerateSwappedLetters, Mode=TwoWay}"
                                      DataContext="{Binding $parent[UserControl].DataContext}"/>
                        </views:LessonOptionItem.MainContent>
                    </views:LessonOptionItem>
                    <views:LessonOptionItem Description="Ignore accent marks" IsInlined="True">
                        <views:LessonOptionItem.TooltipText>
                            Ignore accent marks (for example: "Ã©" and "e" interchangeable)?
                        </views:LessonOptionItem.TooltipText>
                        <views:LessonOptionItem.MainContent>
                            <CheckBox IsChecked="{Binding CurrentOptions.IgnoreAccentMarks, Mode=TwoWay}"
                                      DataContext="{Binding $parent[UserControl].DataContext}"/>
                        </views:LessonOptionItem.MainContent>
                    </views:LessonOptionItem>
                    <views:LessonOptionItem Description="Ignore hyphens" IsInlined="True">
                        <views:LessonOptionItem.TooltipText>
                            Should you be able to use a space instead of the hyphen ("-")?
                        </views:LessonOptionItem.TooltipText>
                        <views:LessonOptionItem.MainContent>
                            <CheckBox IsChecked="{Binding CurrentOptions.IgnoreHyphens, Mode=TwoWay}"
                                      DataContext="{Binding $parent[UserControl].DataContext}"/>
                        </views:LessonOptionItem.MainContent>
                    </views:LessonOptionItem>
                    <views:LessonOptionItem Description="Ignore punctuation" IsInlined="True">
                        <views:LessonOptionItem.TooltipText>
                            Should punctuation be ignored (. , ? ! : ;)?
                        </views:LessonOptionItem.TooltipText>
                        <views:LessonOptionItem.MainContent>
                            <CheckBox IsChecked="{Binding CurrentOptions.IgnorePunctuation, Mode=TwoWay}"
                                      DataContext="{Binding $parent[UserControl].DataContext}"/>
                        </views:LessonOptionItem.MainContent>
                    </views:LessonOptionItem>
                    <views:LessonOptionItem Description="Ignore capitalization" IsInlined="True">
                        <views:LessonOptionItem.TooltipText>
                            Ignore capitalization? If this option is enabled, your answer and the actual definition will be compared case-independently.
                        </views:LessonOptionItem.TooltipText>
                        <views:LessonOptionItem.MainContent>
                            <CheckBox IsChecked="{Binding CurrentOptions.IgnoreCapitalization, Mode=TwoWay}"
                                      DataContext="{Binding $parent[UserControl].DataContext}"/>
                        </views:LessonOptionItem.MainContent>
                    </views:LessonOptionItem>
                </StackPanel>
            </StackPanel>
        </Expander.Content>
    </Expander>
</UserControl>