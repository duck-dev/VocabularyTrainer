<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:learningModes="clr-namespace:VocabularyTrainer.Views.LearningModes"
             xmlns:views="clr-namespace:VocabularyTrainer.Views"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="VocabularyTrainer.Views.LearningModes.MultipleChoiceView">
    
    <UserControl.Styles>
        <Style Selector="Button.multiple-choice-button">
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="CornerRadius" Value="10"/>
            <Setter Property="Background" Value="{StaticResource LightGrey}"/>
            <Setter Property="Margin" Value="10,10"/>
        </Style>
        <Style Selector="Viewbox.multiple-choice-viewbox">
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
        </Style>
        <Style Selector="TextBlock.multiple-choice-text">
            <Setter Property="FontSize" Value="48"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="{StaticResource OppositeAccent}"/>
        </Style>
    </UserControl.Styles>
    
    <Grid ColumnDefinitions="1*,3*">
        <learningModes:LearningModeSidebarView Grid.Column="0" DataContext="{Binding}">
            <learningModes:LearningModeSidebarView.AdditionalContent>
                <StackPanel Orientation="Vertical">
                    <views:LessonOptionItem Description="Toggle progressive learning" IsInlined="True">
                        <views:LessonOptionItem.TooltipText>
                            When progressive learning is enabled, the focus is placed on asking words that you don't know well, followed by words that haven't been asked yet with a slightly lower frequency. 
                            Words you have answered correctly will occur less often.
                        </views:LessonOptionItem.TooltipText>
                        <views:LessonOptionItem.MainContent>
                            <CheckBox DataContext="{Binding $parent[UserControl].DataContext}"
                                      IsChecked="{Binding ProgressiveLearningEnabled}"/>
                        </views:LessonOptionItem.MainContent>
                    </views:LessonOptionItem>
                    <views:LessonOptionItem Description="Ask Term" IsInlined="True" Margin="0,10,0,0">
                        <views:LessonOptionItem.TooltipText>
                            Should the program display the term and you have to answer with the definition? Both can be ticked.
                        </views:LessonOptionItem.TooltipText>
                        <views:LessonOptionItem.MainContent>
                            <CheckBox DataContext="{Binding $parent[UserControl].DataContext}"
                                      IsChecked="{Binding AskTerm}"/>
                        </views:LessonOptionItem.MainContent>
                    </views:LessonOptionItem>
                    <views:LessonOptionItem Description="Ask Definition" IsInlined="True" Margin="0,0,0,25">
                        <views:LessonOptionItem.TooltipText>
                            Should the program display the definition and you have to answer with the term? Both can be ticked.
                        </views:LessonOptionItem.TooltipText>
                        <views:LessonOptionItem.MainContent>
                            <CheckBox DataContext="{Binding $parent[UserControl].DataContext}"
                                      IsChecked="{Binding AskDefinition}"/>
                        </views:LessonOptionItem.MainContent>
                    </views:LessonOptionItem>
                </StackPanel>
            </learningModes:LearningModeSidebarView.AdditionalContent>
        </learningModes:LearningModeSidebarView>
        <Grid Grid.Column="1" RowDefinitions="*,*" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="30,0">
            <Grid Grid.Row="0" RowDefinitions="*,*" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0,20">
                <TextBlock Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Bottom" FontSize="24"
                           Foreground="{StaticResource MainGrey}" Margin="0,0,0,50"
                           IsVisible="{Binding !ProgressiveLearningEnabled}" IsEnabled="{Binding !ProgressiveLearningEnabled}">
                    <TextBlock.Text>
                        <MultiBinding StringFormat="\{0\}/\{1\}">
                            <Binding Path="WordIndexCorrected"/>
                            <Binding Path="MaximumItems"/>
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
                <Grid Grid.Row="1" ColumnDefinitions="*,Auto" HorizontalAlignment="Center" VerticalAlignment="Center"
                      IsVisible="{Binding !IsSolutionShown}">
                    <Viewbox Grid.Column="0" Height="84" HorizontalAlignment="Right" VerticalAlignment="Center"
                             Margin="0,0,60,0">
                        <TextBlock Foreground="{StaticResource OppositeAccent}" Text="{Binding DisplayedTerm}"/>
                    </Viewbox>
                    <ToggleButton Grid.Column="1" x:Name="Star" Classes="star-toggle" VerticalAlignment="Center"
                                  Checked="OnStarChecked" Unchecked="OnStarUnchecked"
                                  IsChecked="{Binding IsCurrentWordDifficult}"
                                  Template="{StaticResource ToggleStarShapeTemplate}" Width="64" Height="64"/>
                </Grid>
            </Grid>
            <Grid Grid.Row="1" ColumnDefinitions="1*,4*,1*" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                  Margin="30,0,30,30">
                <Grid Grid.Column="1" ColumnDefinitions="*,*" RowDefinitions="*,*" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                      MinWidth="520">
                    <Button Grid.Row="0" Grid.Column="0" Classes="selectable-button-effect highlight-no-change multiple-choice-button">
                        <Viewbox Classes="multiple-choice-viewbox">
                            <TextBlock Classes="multiple-choice-text" Text="{Binding PossibleDefinitions[0]}"/>
                        </Viewbox>
                    </Button>
                    <Button Grid.Row="0" Grid.Column="1" Classes="selectable-button-effect highlight-no-change multiple-choice-button">
                        <Viewbox Classes="multiple-choice-viewbox">
                            <TextBlock Classes="multiple-choice-text" Text="{Binding PossibleDefinitions[1]}"/>
                        </Viewbox>
                    </Button>
                    <Button Grid.Row="1" Grid.Column="0" Classes="selectable-button-effect highlight-no-change multiple-choice-button">
                        <Viewbox Classes="multiple-choice-viewbox">
                            <TextBlock Classes="multiple-choice-text" Text="{Binding PossibleDefinitions[2]}"/>
                        </Viewbox>
                    </Button>
                    <Button Grid.Row="1" Grid.Column="1" Classes="selectable-button-effect highlight-no-change multiple-choice-button">
                        <Viewbox Classes="multiple-choice-viewbox">
                            <TextBlock Classes="multiple-choice-text" Text="{Binding PossibleDefinitions[3]}"/>
                        </Viewbox>
                    </Button>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
